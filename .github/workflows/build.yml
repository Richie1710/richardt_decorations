name: build

on:
  pull_request:
  push:

jobs:
  build:
    strategy:
      matrix:
        java: [17] # Current Java LTS & minimum supported by Minecraft
        os: [ubuntu-22.04, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'microsoft'

      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew

      - name: build
        run: ./gradlew build

      - name: capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }} # Only upload artifacts built from latest java on one OS
        uses: actions/upload-artifact@v3
        with:
          name: Artifacts
          path: build/libs/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/release-')
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: setup jdk
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'microsoft'

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: Artifacts
          path: build/libs/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: "Neue Version verf√ºgbar"

      - name: Find JAR File
        id: find_jar
        run: |
          JAR_FILE=$(ls build/libs/richardts_decorations-*.jar | grep -v -- '-sources.jar' | xargs -n 1 basename)
          echo "::set-output name=jar_file::$JAR_FILE"
          echo "Found JAR file: $JAR_FILE"

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/libs/${{ steps.find_jar.outputs.jar_file }}
          asset_name: ${{ steps.find_jar.outputs.jar_file }}
          asset_content_type: application/java-archive
